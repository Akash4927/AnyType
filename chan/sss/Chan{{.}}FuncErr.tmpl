// Chan{{.}}FuncErr returns a channel to receive all results of act until err != nil before close.
func Chan{{.}}FuncErr(act func() ({{.Dot}}, error)) (out <-chan {{.Dot}}) {
	cha := make(chan {{.Dot}})
	go func(out chan<- {{.Dot}}, act func() ({{.Dot}}, error)) {
		defer close(out)
		for i := range inp {
			if res, err := act(); err != nil { // Apply action
				return
			} else {
				out <- res
			}
		}
	}(cha, act)
	return cha
}
