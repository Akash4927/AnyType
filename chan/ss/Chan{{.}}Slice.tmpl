func send{{.}}Slice(out chan<- {{.Dot}}, inp ...[]{{.Dot}}) {
	defer close(out)
	for _, in := range inp {
		for _, i := range in {
			out <- i
		}
	}
}

// Chan{{.}}Slice returns a channel to receive all inputs before close.
func Chan{{.}}Slice(inp ...[]{{.Dot}}) (out <-chan {{.Dot}}) {
	cha := make(chan {{.Dot}})
	go send{{.}}Slice(cha, inp...)
	return cha
}
